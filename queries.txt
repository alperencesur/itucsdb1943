CREATE TABLE Post (
    POSTID SERIAL PRIMARY KEY,
    USERID INTEGER REFERENCES Users (USERID),
    POSTDATE VARCHAR(24),
    PHOTOURL VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    TITLE VARCHAR(27) NOT NULL,
    POSTTAG VARCHAR(20)
)
INSERT INTO Post(USERID, POSTDATE, PHOTOURL, TITLE, POSTTAG )
VALUES (1,'20/11/2019', 'photourl', 'This is Şatok', 'Cat' );

INSERT INTO Post(USERID, POSTDATE, PHOTOURL, TITLE, POSTTAG )
VALUES (1,'20/11/2019', 'photourl', 'This is Minnos', 'Cat' );



CREATE TABLE Vet(
    VETID SERIAL PRIMARY KEY,
    ADDRESS VARCHAR(255) NOT NULL,
    DISTRICT VARCHAR(20) NOT NULL,
    SERVICERATE FLOAT DEFAULT 0,
    PRICERATE FLOAT DEFAULT 0,
    TELEPHONE VARCHAR(15) NOT NULL,
    OVERALLSCORE FLOAT DEFAULT 0,
    VETNAME VARCHAR(50) NOT NULL
)



CREATE TABLE Users (
    USERID SERIAL PRIMARY KEY,
    NAME VARCHAR(40) NOT NULL,
    SURNAME VARCHAR(40) NOT NULL,
    EMAIL VARCHAR(80),
    ISVET INTEGER NOT NULL,
    PHOTO VARCHAR(255),
    TOKEN VARCHAR(30),
    PASSWORD VARCHAR(50)
)

INSERT INTO Users(NAME, SURNAME, EMAIL,ISVET,PASSWORD )
VALUES ('Bengisu', 'Pinar', 'almla671@gmail.com',0,'123456');



CREATE TABLE ForumPost (
    FORUMID SERIAL PRIMARY KEY,
    USERID INTEGER FOREIGN KEY REFERENCES Users (USERID),
    QUESTION VARCHAR(255) NOT NULL,
    TITLE VARCHAR(40) NOT NULL,
    FORUMDATE VARCHAR(24),
    FORUMTAG VARCHAR(20),
    LIKENUMBER INTEGER DEFAULT 0
)

CREATE TABLE Blog (
    BLOGID SERIAL PRIMARY KEY,
    USERID INTEGER REFERENCES Users (USERID),
    BLOGTAG VARCHAR(20),
    TITLE VARCHAR(100) NOT NULL,
    TEXT VARCHAR(255) NOT NULL,
    LIKENUMBER INTEGER DEFAULT 0,
    DISLIKENUMBER INTEGER DEFAULT 0,
    POSTDATE DATE
)

CREATE TABLE Notice (
    NOTICEID SERIAL PRIMARY KEY,
    USERID INTEGER REFERENCES Users (USERID),
    ANIMALTYPE INTEGER NOT NULL,
    AGE INTEGER NOT NULL,
    STRAIN VARCHAR(20),
    GENDER INTEGER NOT NULL,
    PHOTOURL VARCHAR(255),
    ISLOST INTEGER NOT NULL,
    DESCRIPTION VARCHAR(255)
)

CREATE TABLE Foundation (
    FOUNDID SERIAL PRIMARY KEY,
    PHOTO VARCHAR(255),
    DONATIONURL VARCHAR(255), 
    CHANNEL INTEGER REFERENCES SocialMedia(OWNERID),
    ABOUT VARCHAR(255) NOT NULL,
    FOUNDNAME VARCHAR(50) NOT NULL
)

CREATE TABLE Notification(
    NOTIFICATIONID SERIAL PRIMARY KEY,
    POSTID  INTEGER NOT NULL,
    USERID INTEGER NOT NULL,
    CONTENT VARCHAR(200) NOT NULL,
    POSTTYPE INTEGER NOT NULL,
    NOTIFICATIONTIME VARCHAR(20) NOT NULL,
    WHOSENT INTEGER NOT NULL,
    ISSEN INTEGER DEFAULT 0,
    FOREIGN KEY POSTID REFERENCES Post (POSTID),
    FOREIGN KEY USERID REFERENCES Users (USERID),
    FOREIGN KEY OWNERID REFERENCES Users (USERID)
)

CREATE TABLE Comment(
    COMMENTID SERIAL PRIMARY KEY,
    POSTID INTEGER NOT NULL REFERENCES Post (POSTID),
    USERID INTEGER REFERENCES Users (USERID),
    DATE VARCHAR(24),
    COMMENT VARCHAR(70),
    POSTTYPE INTEGER NOT NULL ;pATİGRAMSA 0 
)


CREATE TABLE Likes(
    POSTID INTEGER REFERENCES Post (POSTID),
    WHOLIKED INTEGER REFERENCES Users (USERID),
    DATE VARCHAR(24),
    POSTTYPE INTEGER NOT NULL,
    PRIMARY KEY (POSTID, WHOLIKED)
)

CREATE TABLE SocialMedia(
    OWNERID INTEGER REFERENCES Users(USERID),
    FACEBOOK VARCHAR(255),
    TWITTER VARCHAR(255),
    INSTAGRAM VARCHAR(255),
    YOUTUBE VARCHAR(255),
    WEBSITE VARCHAR(255),
    PRIMARY KEY (OWNERID)
)


select userid,name,surname,email,isvet,password,facebook,twitter,youtube,instagram,website from users left join socialmedia on users.userid = socialmedia.ownerid
